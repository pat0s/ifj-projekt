1. void RETURNS - vytvoria lf@returnX premenne, ako ale budeme vediet pri priradeni, ze mame s nimi pracovat? nemali by sme return hodnoty pushovat na zasobnik a potom popovat? Zbytocne sa budu vytvarat premenne, ak return hodnotu budem potrebovat, tak sa pushne
2. Je potreban funckia RETURN_RETVALS? aka je jej funkcie? kde sa ma umiestnit? ma zmysel?
3. Chyba push returnovych hodnot funkcie, nikde som ho nenasiel
4. char *string, ktory predavam do kazdej funkcie sa po while precistuje sam? alebo to mam riesit ja? alebo sa nemusi precistovat vobec?
5. pri priradeniach a locale potrebujem volat funkciu, ktora mi vygeneruje POP zo zasobniku, staci 1 POP. Pri viacnasobnom priradeni budem POP volat viacej krat
6. Treba vytvorit v generovani kodu funkcie na POP do premennej, ktoru dostane funkcia ako parameter funkcie


TODO:
1. volanie funkcie pri priradeniach a v tele inej funkcie - CREATEFRAME, ..
2. zahadzovanie hodnot returnov zo zasobniku


TODO IVO:
1.dorobit defvar
2. write a read
3. dorobit defvar pre local - defvar + move nil@nil (defvar LF@C-%s%s), data->specialIDNumber, nazov_premennej
4. prepisat argumenty - MOVE nahradit na POPS, odstranit Token *token lebo budeme POPSovat do TF@%s_arg%s
5. funkia POPS, odstranime Token *token, nahradit za char *, do ktorej budem davat meno ID a pridat char *number, do ktoreh pojde specialIDString
6. PUSHS flag na kontrolu nilu, ci generovat kontrolu nilu alebo nie

LF@1a




while 5< a do
local b:integer = foo()
local b:integer = 10+6
a,c,b = foo()

end




Precedecna sa vola: 

local a:integer 
b = a +5
local a:integer = 10+6
a = 10+6
a,b,c = 10, 100+100, 10
return 10+5
return 10+a, 10+100
if a<5
while a < 5